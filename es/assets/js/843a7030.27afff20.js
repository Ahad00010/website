"use strict";(self.webpackChunkAoiEngine=self.webpackChunkAoiEngine||[]).push([[2807],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},56663:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>f,default:()=>w,frontMatter:()=>g,metadata:()=>h,toc:()=>v});var r=n(3905),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&p(e,n,t[n]);if(s)for(var n of s(t))l.call(t,n)&&p(e,n,t[n]);return e},m=(e,t)=>o(e,i(t)),d=(e,t)=>{var n={};for(var r in e)c.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&s)for(var r of s(e))t.indexOf(r)<0&&l.call(e,r)&&(n[r]=e[r]);return n};const g={title:"Server captcha verification",description:"A command to make a verification system.",authors:{name:"@ahoemi",title:"Member - 715852000096419900",userid:"715852000096419900",url:"https://discord.com/users/715852000096419900",image_url:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/715852000096419900.png"},tags:["v6","aoi.js","Other"],hide_table_of_contents:!0,enableComments:!0,pagination_prev:null,pagination_next:null},f=void 0,h={permalink:"/es/wikis/posts/715852000096419900/vr5jfn",source:"@site/forums/posts/715852000096419900/vr5jfn.md",title:"Server captcha verification",description:"A command to make a verification system.",date:"2023-07-18T22:09:44.000Z",formattedDate:"18 de julio de 2023",tags:[{label:"v6",permalink:"/es/wikis/tags/v-6"},{label:"aoi.js",permalink:"/es/wikis/tags/aoi-js"},{label:"Other",permalink:"/es/wikis/tags/other"}],hasTruncateMarker:!1,authors:[{name:"@ahoemi",title:"Member - 715852000096419900",userid:"715852000096419900",url:"https://discord.com/users/715852000096419900",image_url:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/715852000096419900.png",imageURL:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/715852000096419900.png"}],frontMatter:{title:"Server captcha verification",description:"A command to make a verification system.",authors:{name:"@ahoemi",title:"Member - 715852000096419900",userid:"715852000096419900",url:"https://discord.com/users/715852000096419900",image_url:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/715852000096419900.png",imageURL:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/715852000096419900.png"},tags:["v6","aoi.js","Other"],hide_table_of_contents:!0,enableComments:!0,pagination_prev:null,pagination_next:null},prevItem:{title:"Emoji Progress Bar",permalink:"/es/wikis/posts/715852000096419900/szskh"},nextItem:{title:"reverseText",permalink:"/es/wikis/posts/715852000096419900/w2htzj"}},y={authorsImageUrls:[void 0]},v=[{value:"Requirement",id:"requirement",level:2}],b={toc:v},$="wrapper";function w(e){var t=e,{components:n}=t,a=d(t,["components"]);return(0,r.kt)($,m(u(u({},b),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",u({},{id:"requirement"}),"Requirement"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-hash"}),"npm i captcha-generator-alphanumeric\n")),(0,r.kt)("h1",u({},{id:"code"}),"code"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-js"}),"bot.command({\n  name: \"setVerifyRole\",\n  code:`\n$findRole[$message] is not verified role!\n$setGuildVar[verifyRole;$findRole[$message]]\n\n$onlyIf[$message[1]!=;Provide a role.]\n  \n$onlyIf[$hasPerms[$guildID;$authorID;manageroles];You don't have \\`MANAGE_ROLES\\` permission.]\n\n  `\n},{\n  name: \"verify\",\n  type: \"default\",\n  code:`\n  $setUserVar[captcha;$get[code]]\n\n  $let[code;$djsEval[( async() => {\n  const Captcha = require('captcha-generator-alphanumeric').default;\n\n  const { EmbedBuilder, AttachmentBuilder, ButtonBuilder, ActionRowBuilder } = require('discord.js')\n\n  let captcha = new Captcha();\n\n  const img = new AttachmentBuilder(captcha.PNGStream, { name: 'captcha.png'})\n\n  const button = new ButtonBuilder()\n  .setLabel('Verify')\n  .setCustomId('dmVerify')\n  .setStyle(3)\n\n  const row = new ActionRowBuilder()\n  .addComponents(button)\n\n  const embed = new EmbedBuilder()\n  .setDescription('**Verify the captcha below**')\n  .setImage('attachment://captcha.png')\n  .setFooter({text: '$guildID'})\n  .setAuthor({name: 'From server - $guildName', iconURL: '$guildIcon'})\n\n\n  await client.users.send('$authorID', { embeds: [embed], files: [img], components: [row]})\n  return captcha.value\n  })();true]]\n\n  $onlyIf[$roleExists[$getGuildVar[verifyRole;$guildID];$guildID]==true;The verify role is either invalid or not set yet.]\n  \n  `\n},{\n  name: \"dmVerify\",\n  type: \"interaction\",\n  prototype: 'button',\n  code:`\n  $setUserVar[attempt;3;$authorID;$get[guild]]\n  $interactionModal[Server Verification;verify;{actionRow:{textInput:Type the code here!:1:code:captcha code:yes: :5:7}}]\n\n  $let[guild;$getObjectProperty[embeds[0].footer.text]]\n  $createObject[$nonEscape[$fetch[message;$messageID]]]\n  `\n},{\n  name: \"verify\",\n  type: \"interaction\",\n  prototype: \"modal\",\n  code:`\n\n\n$giveRole[$get[guild];$authorID;$getGuildVar[verifyRole;$get[guild]];Verification]\n\n$interactionReply[VerificationSuccessful!]\n\n$onlyIf[$toUppercase[$textInputValue[code]]==$getUserVar[captcha;$authorID;$get[guild]];Invalid captcha provided\\nRemaining attempts: $getUserVar[attempt;$authorID;$get[guild]]{options:{ephemeral:true}}{extraOptions:{interaction:true}}]\n\n$setUserVar[attempt;$math[$getUserVar[attempt;$authorID;$get[guild]]-1];$authorID;$get[guild]]\n\n$onlyIf[$getUserVar[attempt;$authorID;$get[guild]]!=0;You have 0 attempts left\\nAgain use the verify command to solve captcha again{options:{ephemeral:true}}{extraOptions:{interaction:true}}]\n\n  $let[guild;$getObjectProperty[embeds[0].footer.text]]\n  $createObject[$nonEscape[$fetch[message;$messageID]]]\n  `\n})\n")),(0,r.kt)("p",null,"In index.js file, turn it to handler type if you need to."),(0,r.kt)("h1",u({},{id:"usage"}),"Usage"),(0,r.kt)("p",null,"No usage, Find it yourself.",(0,r.kt)("br",{parentName:"p"}),"\n","Anyways the If you find any problems try to solve yourself first before pinging me."),(0,r.kt)("h1",u({},{id:"images"}),"Images"),(0,r.kt)("p",null,(0,r.kt)("img",u({parentName:"p"},{src:"https://media.discordapp.net/attachments/1118911532378640527/1128222014306533476/image0.jpg",alt:"image1"}))))}w.isMDXComponent=!0}}]);