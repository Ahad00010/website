"use strict";(self.webpackChunkAoiEngine=self.webpackChunkAoiEngine||[]).push([[99826],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>k,frontMatter:()=>f,metadata:()=>g,toc:()=>b});var r=n(3905),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&u(e,n,t[n]);if(s)for(var n of s(t))l.call(t,n)&&u(e,n,t[n]);return e},p=(e,t)=>o(e,i(t)),d=(e,t)=>{var n={};for(var r in e)c.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&s)for(var r of s(e))t.indexOf(r)<0&&l.call(e,r)&&(n[r]=e[r]);return n};const f={title:"Country Information Custom Function",description:"The $country function provides detailed information about a specific country. By specifying the country name and desired format, you can retrieve various details such as the country's name in English or Spanish, continent information, capital city, dialing code, country codes, top-level domain, area measurement, flag in emoji format, and high-resolution flag image.",authors:{name:"@jollyjolli",title:"Member - 166181471369953280",userid:"166181471369953280",url:"https://discord.com/users/166181471369953280",image_url:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/166181471369953280.png"},tags:["aoi.js","v6"],hide_table_of_contents:!0,enableComments:!0,pagination_prev:null,pagination_next:null},y="Inspired by [my other code](https://aoi.js.org/wikis/posts/166181471369953280/p2o9s)",g={permalink:"/es/wikis/posts/166181471369953280/ny063",source:"@site/forums/posts/166181471369953280/ny063.md",title:"Country Information Custom Function",description:"The $country function provides detailed information about a specific country. By specifying the country name and desired format, you can retrieve various details such as the country's name in English or Spanish, continent information, capital city, dialing code, country codes, top-level domain, area measurement, flag in emoji format, and high-resolution flag image.",date:"2023-07-18T22:09:44.000Z",formattedDate:"18 de julio de 2023",tags:[{label:"aoi.js",permalink:"/es/wikis/tags/aoi-js"},{label:"v6",permalink:"/es/wikis/tags/v-6"}],hasTruncateMarker:!1,authors:[{name:"@jollyjolli",title:"Member - 166181471369953280",userid:"166181471369953280",url:"https://discord.com/users/166181471369953280",image_url:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/166181471369953280.png",imageURL:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/166181471369953280.png"}],frontMatter:{title:"Country Information Custom Function",description:"The $country function provides detailed information about a specific country. By specifying the country name and desired format, you can retrieve various details such as the country's name in English or Spanish, continent information, capital city, dialing code, country codes, top-level domain, area measurement, flag in emoji format, and high-resolution flag image.",authors:{name:"@jollyjolli",title:"Member - 166181471369953280",userid:"166181471369953280",url:"https://discord.com/users/166181471369953280",image_url:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/166181471369953280.png",imageURL:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/166181471369953280.png"},tags:["aoi.js","v6"],hide_table_of_contents:!0,enableComments:!0,pagination_prev:null,pagination_next:null},prevItem:{title:"Random Car Image",permalink:"/es/wikis/posts/166181471369953280/nji73d"},nextItem:{title:"Random Country",permalink:"/es/wikis/posts/166181471369953280/p2o9s"}},h={authorsImageUrls:[void 0]},b=[{value:"Format:",id:"format",level:2}],v={toc:b},w="wrapper";function k(e){var t=e,{components:n}=t,a=d(t,["components"]);return(0,r.kt)(w,p(m(m({},v),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",m({},{id:"usage"}),"Usage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"$country[Country;Format]")),(0,r.kt)("p",null,"Both are obligatory"),(0,r.kt)("h1",m({},{id:"code"}),"Code"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-js"}),'const fetch = require("node-fetch");\n\nconst getCountriesData = async () => {\n  try {\n    const response = await fetch(\n      "https://www.jsonkeeper.com/b/L23E"\n    );\n    const data = await response.json();\n    return data.countries;\n  } catch (error) {\n    console.error("An error occurred while fetching country data:", error);\n    return [];\n  }\n};\n\nbot.functionManager.createFunction({\n  name: "$country",\n  type: "djs",\n  code: async (d) => {\n    const data = d.util.aoiFunc(d);\n    const [countryName, format] = data.inside.splits;\n\n    const countries = await getCountriesData();\n\n    const country = countries.find(\n      (c) =>\n        c.name_en.toLowerCase() === countryName.toLowerCase() ||\n        c.name_es.toLowerCase() === countryName.toLowerCase()\n    );\n\n    if (!country) {\n      data.result = "Invalid country specified!";\n      return { code: d.util.setCode(data) };\n    }\n\n    if (!format) {\n      data.result = "No format specified!";\n      return { code: d.util.setCode(data) };\n    }\n\n    const placeholders = {\n      "{name_en}": country.name_en,\n      "{name_es}": country.name_es,\n      "{continent_en}": country.continent_en,\n      "{continent_es}": country.continent_es,\n      "{capital_en}": country.capital_en,\n      "{capital_es}": country.capital_es,\n      "{dial_code}": country.dial_code,\n      "{code_2}": country.code_2,\n      "{code_3}": country.code_3,\n      "{tld}": country.tld,\n      "{km2}": country.km2,\n      "{flag}": `:flag_${country.code_2.toLowerCase()}:`,\n      "{image}": `https://flagcdn.com/w2560/${country.code_2.toLowerCase()}.jpg`,\n    };\n\n    let result = format;\n    for (const placeholder in placeholders) {\n      result = result.replace(\n        new RegExp(placeholder, "g"),\n        placeholders[placeholder]\n      );\n    }\n\n    data.result = result;\n\n    return { code: d.util.setCode(data) };\n  },\n});\n\n')),(0,r.kt)("h1",m({},{id:"info"}),"Info"),(0,r.kt)("h2",m({},{id:"format"}),"Format:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"{name_en}: Country name in English."),(0,r.kt)("li",{parentName:"ul"},"{name_es}: Country name in Spanish."),(0,r.kt)("li",{parentName:"ul"},"{continent_en}: Country's continent in English."),(0,r.kt)("li",{parentName:"ul"},"{continent_es}: Country's continent in Spanish."),(0,r.kt)("li",{parentName:"ul"},"{capital_en}: Country's capital in English."),(0,r.kt)("li",{parentName:"ul"},"{capital_es}: Country's capital in Spanish."),(0,r.kt)("li",{parentName:"ul"},"{dial_code}: Country's dialing code."),(0,r.kt)("li",{parentName:"ul"},"{code_2}: Country's two-letter country code."),(0,r.kt)("li",{parentName:"ul"},"{code_3}: Country's three-letter country code."),(0,r.kt)("li",{parentName:"ul"},"{tld}: Country's top-level domain (TLD)."),(0,r.kt)("li",{parentName:"ul"},"{km2}: Country's area in square kilometers."),(0,r.kt)("li",{parentName:"ul"},"{flag}: Country's flag in emoji format (:flag_xx:, where xx is the lowercase country code)."),(0,r.kt)("li",{parentName:"ul"},"{image}: URL of a high-resolution image of the country's flag.")))}k.isMDXComponent=!0}}]);