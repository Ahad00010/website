"use strict";(self.webpackChunkAoiEngine=self.webpackChunkAoiEngine||[]).push([[6112],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96272:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>b,contentTitle:()=>g,default:()=>w,frontMatter:()=>f,metadata:()=>h,toc:()=>y});var n=r(3905),a=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&p(e,r,t[r]);if(i)for(var r of i(t))c.call(t,r)&&p(e,r,t[r]);return e},m=(e,t)=>o(e,s(t)),d=(e,t)=>{var r={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&c.call(e,n)&&(r[n]=e[n]);return r};const f={title:"Progression bar",description:"A function that makes progression bar to save time and help people who can't do basic maths",authors:{name:"@p4olo.",title:"Member - 713132410153205802",userid:"713132410153205802",url:"https://discord.com/users/713132410153205802",image_url:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/713132410153205802.png"},tags:["v6","aoi.js","Other"],hide_table_of_contents:!0,enableComments:!0,pagination_prev:null,pagination_next:null},g="Function:",h={permalink:"/wikis/posts/713132410153205802/c6h1efa",source:"@site/forums/posts/713132410153205802/c6h1efa.md",title:"Progression bar",description:"A function that makes progression bar to save time and help people who can't do basic maths",date:"2023-07-27T04:45:59.000Z",formattedDate:"July 27, 2023",tags:[{label:"v6",permalink:"/wikis/tags/v-6"},{label:"aoi.js",permalink:"/wikis/tags/aoi-js"},{label:"Other",permalink:"/wikis/tags/other"}],hasTruncateMarker:!1,authors:[{name:"@p4olo.",title:"Member - 713132410153205802",userid:"713132410153205802",url:"https://discord.com/users/713132410153205802",image_url:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/713132410153205802.png",imageURL:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/713132410153205802.png"}],frontMatter:{title:"Progression bar",description:"A function that makes progression bar to save time and help people who can't do basic maths",authors:{name:"@p4olo.",title:"Member - 713132410153205802",userid:"713132410153205802",url:"https://discord.com/users/713132410153205802",image_url:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/713132410153205802.png",imageURL:"https://raw.githubusercontent.com/Faf4a/website/main/assets/images/avatars/713132410153205802.png"},tags:["v6","aoi.js","Other"],hide_table_of_contents:!0,enableComments:!0,pagination_prev:null,pagination_next:null},prevItem:{title:"Some thread functions",permalink:"/wikis/posts/713132410153205802/34unj"},nextItem:{title:"Member count with image",permalink:"/wikis/posts/715852000096419900/5sg6ej"}},b={authorsImageUrls:[void 0]},y=[{value:"Options:",id:"options",level:2},{value:"Code:",id:"code",level:3},{value:"Preview:",id:"preview",level:3}],v={toc:y},k="wrapper";function w(e){var t=e,{components:r}=t,a=d(t,["components"]);return(0,n.kt)(k,m(u(u({},v),a),{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"$progressBar[current:total:style?;main character?;secondary character?;scale?]")),(0,n.kt)("h2",u({},{id:"options"}),"Options:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"current = current number."),(0,n.kt)("li",{parentName:"ul"},"total = total number."),(0,n.kt)("li",{parentName:"ul"},"style = ",(0,n.kt)("inlineCode",{parentName:"li"},"split")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"filled")," (default value)."),(0,n.kt)("li",{parentName:"ul"},"main character = filled character (for filled style, default = \u25fc) or split character (for split style, default = \ud83d\udccd)."),(0,n.kt)("li",{parentName:"ul"},"secondary character = empty character (for filled style, default = \u25fb) or bar character (for split style, default = \u2500)."),(0,n.kt)("li",{parentName:"ul"},"scale = total number of characters, default is 30.")),(0,n.kt)("h3",u({},{id:"code"}),"Code:"),(0,n.kt)("p",null,"Put this in you main file:"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-js"}),"bot.functionManager.createFunction({\n  name: '$progressBar',\n  type: 'djs',\n  code: async (d) => {\n    const data = d.util.aoiFunc(d);\n    const [current, total, style = 'filled', mainCharacter = style === 'split' ? '\ud83d\udccd' : '\u25fc', secondaryCharacter = style === 'split' ? '\u2500' : '\u25fb', scale = 30] = data.inside.splits;\n\n    if (!current) {\n      return d.aoiError.fnError(d, 'custom', {}, 'Current number is missing.');\n    }\n\n    if (!total) {\n      return d.aoiError.fnError(d, 'custom', {}, 'Total number is missing.');\n    }\n\n    if (parseFloat(current) > parseFloat(total)) {\n      return d.aoiError.fnError(d, 'custom', {}, 'Current cannot be greater than total.');\n    }\n\n    if (isNaN(parseFloat(current)) || isNaN(parseFloat(total))) {\n      return d.aoiError.fnError(d, 'custom', {}, 'Current and total values must be numbers.');\n    }\n\n    if (style !== 'filled' && style !== 'split') {\n      return d.aoiError.fnError(d, 'custom', {}, 'Invalid style. Supported styles are \"filled\" and \"split\".');    }\n\n    try {\n      const percentage = (parseFloat(current) / parseFloat(total)) * 100;\n      const filledCount = Math.round((percentage / 100) * scale);\n      const emptyCount = scale - filledCount;\n\n      let progressBar = '';\n      if (style === 'filled') {\n        progressBar = mainCharacter.repeat(filledCount) + secondaryCharacter.repeat(emptyCount);\n      } else if (style === 'split') {\n        const markerIndex = Math.round((filledCount / scale) * (scale) - 1);\n        for (let i = 0; i < scale; i++) {\n          if (i === markerIndex) {\n            progressBar += mainCharacter;\n          } else {\n            progressBar += secondaryCharacter;\n          }\n        }\n      }\n\n      data.result = progressBar;\n      return {\n        code: d.util.setCode(data),\n      };\n    } catch (error) {\n      return d.aoiError.fnError(d, 'custom', {}, 'An error occurred while generating the progress bar.');\n    }\n  },\n});\n\n")),(0,n.kt)("h3",u({},{id:"preview"}),"Preview:"),(0,n.kt)("p",null,(0,n.kt)("img",u({parentName:"p"},{src:"https://cdn.discordapp.com/attachments/1100434750558175242/1125833267199881236/image.png",alt:"image"}))))}w.isMDXComponent=!0}}]);