"use strict";(self.webpackChunkAoiEngine=self.webpackChunkAoiEngine||[]).push([[22345],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=a.createContext({}),s=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(m.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,m=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),u=o,g=p["".concat(m,".").concat(u)]||p[u]||d[u]||i;return n?a.createElement(g,r(r({ref:t},c),{},{components:n})):a.createElement(g,r({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[p]="string"==typeof e?e:o,r[1]=l;for(var s=2;s<i;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},97517:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),o=(n(67294),n(3905));const i={title:"Subcommands",description:"This page covers everything about Subcommands of Application Commands.",id:"interaction-subcommands"},r=void 0,l={unversionedId:"guides/application-cmds/interaction-subcommands",id:"version-6.4.0/guides/application-cmds/interaction-subcommands",title:"Subcommands",description:"This page covers everything about Subcommands of Application Commands.",source:"@site/versioned_docs/version-6.4.0/guides/application-cmds/2subcommands.md",sourceDirName:"guides/application-cmds",slug:"/guides/application-cmds/interaction-subcommands",permalink:"/docs/guides/application-cmds/interaction-subcommands",draft:!1,tags:[],version:"6.4.0",lastUpdatedBy:"Fafa",lastUpdatedAt:1689429644,formattedLastUpdatedAt:"Jul 15, 2023",frontMatter:{title:"Subcommands",description:"This page covers everything about Subcommands of Application Commands.",id:"interaction-subcommands"},sidebar:"docs",previous:{title:"User Commands",permalink:"/docs/guides/application-cmds/interaction-usercommands"},next:{title:"Subcommand Groups",permalink:"/docs/guides/application-cmds/interaction-subcommandgroups"}},m={},s=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Sub commands",id:"sub-commands",level:2},{value:"Creating Application Commands",id:"creating-application-commands",level:2},{value:"Examples of creating Application Commands with sub commands",id:"examples-of-creating-application-commands-with-sub-commands",level:3},{value:"Preview of the Example",id:"preview-of-the-example",level:3},{value:"Replying to Sub commands",id:"replying-to-sub-commands",level:2}],c={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Unfinished",type:"info"},(0,o.kt)("h2",{parentName:"admonition",id:"this-guide-is-unfinished-and-will-change-in-the-future"},"This guide is unfinished, and will change in the future.")),(0,o.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sub-commands"},"Sub commands")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#creating-application-commands"},"Creating Application Commands"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#examples-of-creating-application-commands-with-sub-commands"},"Examples of creating Application Commands with sub commands")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#preview-of-the-example"},"Preview of the Example")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#replying-to-sub-commands"},"Replying to Sub commands"))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"sub-commands"},"Sub commands"),(0,o.kt)("p",null,'Sub-commands are apart of slash commands and are used to add as the name already suggest sub commands to the regular slash command. Which does not only "bypass" the slash command limit but also allows you to properly structure your application commands.'),(0,o.kt)("h2",{id:"creating-application-commands"},"Creating Application Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"$createApplicationCommand[guildID/global;name;description;defaultPermission(true/false);type(slash/user/message);options?]\n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Field"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"guildID/global"),(0,o.kt)("td",{parentName:"tr",align:null},"string, integer"),(0,o.kt)("td",{parentName:"tr",align:null},"The type of application command, either for every guild (global) or for one specific guild (specific guildID)."),(0,o.kt)("td",{parentName:"tr",align:"center"},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"name"),(0,o.kt)("td",{parentName:"tr",align:null},"string, number"),(0,o.kt)("td",{parentName:"tr",align:null},"The actual slash command name that will be visible to the user."),(0,o.kt)("td",{parentName:"tr",align:"center"},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"description"),(0,o.kt)("td",{parentName:"tr",align:null},"string, number"),(0,o.kt)("td",{parentName:"tr",align:null},"The slash command description that will be visible to the user."),(0,o.kt)("td",{parentName:"tr",align:"center"},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"defaultPermission"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"If the application command should syncronisate to the default permissions."),(0,o.kt)("td",{parentName:"tr",align:"center"},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"type"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"The application command type (explained below)"),(0,o.kt)("td",{parentName:"tr",align:"center"},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"options?"),(0,o.kt)("td",{parentName:"tr",align:null},"object"),(0,o.kt)("td",{parentName:"tr",align:null},"Slash commands options."),(0,o.kt)("td",{parentName:"tr",align:"center"},"true")))),(0,o.kt)("h3",{id:"examples-of-creating-application-commands-with-sub-commands"},"Examples of creating Application Commands with sub commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'bot.command({\n    name: "createApplicationCommand",\n    code: `\n  $createApplicationCommand[guildID/global;moderation;Moderation Commands!;true;slash;[\n{\n  "name": "kick",\n  "description": "Kick someone of your guild!",\n  "type": 1 \n},\n{\n  "name": "ban",\n  "description": "Ban someone of your guild!",\n  "type": 1 \n}\n]]`\n});\n')),(0,o.kt)("h3",{id:"preview-of-the-example"},"Preview of the Example"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/aoijs/website/main/assets/images/previews/application-commands.png",alt:"preview"})),(0,o.kt)("h2",{id:"replying-to-sub-commands"},"Replying to Sub commands"),(0,o.kt)("p",null,'To interact with those we kinda need to "filter" the different options of the "moderation" slash commands. We can do that with ',(0,o.kt)("inlineCode",{parentName:"p"},"$onlyIf")," and some advanced stuff."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"$onlyIf[$interactionData[options._subcommand]==sub_command_name;]\n")),(0,o.kt)("p",null,"This will basically check for the sub command name and if it doesn't match it will block the command, so for our case it would look something like this.."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'bot.interactionCommand({\n    name: "moderation",\n    prototype: "slash",\n    code: `\n    $interactionReply[You picked the **ban** sub command!]\n    $onlyIf[$interactionData[options._subcommand]==ban;]`\n})\n\nbot.interactionCommand({\n    name: "moderation",\n    prototype: "slash",\n    code: `\n    $interactionReply[You picked the **kick** sub command!]\n    $onlyIf[$interactionData[options._subcommand]==kick;]`\n})\n')),(0,o.kt)("p",null,"Here's the handler example (which has the ability to store multiple commands in the same file, therfore its compacter):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = [{\n    name: "moderation",\n    prototype: "slash",\n    type: "interaction",\n    code: `\n    $interactionReply[You picked the **ban** sub command!]\n    $onlyIf[$interactionData[options._subcommand]==ban;]`\n}, {\n    name: "moderation",\n    prototype: "slash",\n    type: "interaction",\n    code: `\n    $interactionReply[You picked the **kick** sub command!]\n    $onlyIf[$interactionData[options._subcommand]==kick;]`\n}]\n')))}d.isMDXComponent=!0}}]);