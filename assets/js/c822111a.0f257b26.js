"use strict";(self.webpackChunkaoijs_docs=self.webpackChunkaoijs_docs||[]).push([[30022],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,h=d["".concat(c,".").concat(f)]||d[f]||s[f]||l;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},33993:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const l={title:"$createChannel",description:"Creates a channel with given type (text/voice) and name. If fourth field is set to 'yes', the function will return the newly created channel ID."},o=void 0,i={unversionedId:"functions/createchannel",id:"version-5.5.5/functions/createchannel",title:"$createChannel",description:"Creates a channel with given type (text/voice) and name. If fourth field is set to 'yes', the function will return the newly created channel ID.",source:"@site/versioned_docs/version-5.5.5/functions/createchannel.md",sourceDirName:"functions",slug:"/functions/createchannel",permalink:"/docs/functions/createchannel",draft:!1,tags:[],version:"5.5.5",lastUpdatedBy:"Leref",lastUpdatedAt:1658666031,formattedLastUpdatedAt:"Jul 24, 2022",frontMatter:{title:"$createChannel",description:"Creates a channel with given type (text/voice) and name. If fourth field is set to 'yes', the function will return the newly created channel ID."},sidebar:"docs",previous:{title:"$cpu",permalink:"/docs/functions/cpu"},next:{title:"$createFile",permalink:"/docs/functions/createfile"}},c={},u=[{value:"Fields",id:"fields",level:4},{value:"Options",id:"options",level:4},{value:"Types",id:"types",level:4}],p={toc:u};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This function allows the bot to create a channel"),(0,a.kt)("h4",{id:"fields"},"Fields"),(0,a.kt)("p",null,"This function has 3 required fields"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"GuildID ","(","Required",")"),(0,a.kt)("li",{parentName:"ol"},"Name ","(","Required",")"),(0,a.kt)("li",{parentName:"ol"},"Type ","(","Required",")"),(0,a.kt)("li",{parentName:"ol"},"Return ID ","(","Optional",")"),(0,a.kt)("li",{parentName:"ol"},"Category ID ","(","Optional",")")),(0,a.kt)("p",null,"Raw Usage: ",(0,a.kt)("inlineCode",{parentName:"p"},"$createChannel[guildId;name;type;return ID (yes/no);category ID (optional)]")),(0,a.kt)("h4",{id:"options"},"Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Guild ID - The ID of the guild"),(0,a.kt)("li",{parentName:"ul"},"Name - The name of the channel"),(0,a.kt)("li",{parentName:"ul"},"Type - The type of the channel you want to make"),(0,a.kt)("li",{parentName:"ul"},"Return ID - Whether or not the function will return newly created channel ID"),(0,a.kt)("li",{parentName:"ul"},"Category ID - The category of which the channel will be placed under")),(0,a.kt)("h4",{id:"types"},"Types"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"text - Text Channel"),(0,a.kt)("li",{parentName:"ul"},"voice - Voice Channel"),(0,a.kt)("li",{parentName:"ul"},"category - Category"),(0,a.kt)("li",{parentName:"ul"},"stage - Stage Channel")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'bot.command({\nname: "create",\ncode: `Channel ID: $createChannel[$guildID;new;text;yes]` //Makes a text channel named "new"\n})\n')))}s.isMDXComponent=!0}}]);